{
    "batch_size": 1,

    "pre_transforms":
    [
        {
            "name": "LoadResolutionFromNifty",
            "args": {
              "applied_key": "image",
              "new_key": "image_resolution"
            }
        },
        {
            "name": "LoadNifty",
            "args": {
              "fields": "image"
            }
        },
        {
            "name": "Load3DShapeFromNumpy",
            "args": {
              "applied_key": "image",
              "new_key": "image_shape"
            }
        },
        {
            "name": "ResampleVolume",
            "args": {
              "applied_key": "image",
              "resolution": "image_resolution",
              "target_resolution": [
                1.0,
                1.0,
                1.0
              ]
            }
        },
        {
            "name": "VolumeTo4DArray",
            "args": {
              "fields": "image"
            }
        },
        {
            "name": "ScaleIntensityRange",
            "args": {
              "field": "image",
              "a_min": 0,
              "a_max": 2048,
              "b_min": 0.0,
              "b_max": 1.0,
              "clip": true
            }
        }
    ],

    "post_transforms":
    [
        {
            "name": "ArgmaxAcrossChannels",
            "args": {
              "applied_key": "model"
            }
        },
        {
            "name": "NPResize3D",
            "args": {
              "applied_keys": "model",
              "output_shape_key": "image_shape",
              "nearest": true
            }
        },
        {
            "name": "SplitBasedOnLabel",
            "args": {
              "applied_key": "model",
              "channel_names": [
                "pred_class0",
                "pred_class1",
                "pred_class2"
              ]
            }
        }
    ],

    "writers":
    [
      {
        "name": "NiftyWriter",
        "args": {
          "applied_key": "model",
          "dtype": "uint8",
          "write_path": "{MMAR_EVAL_OUTPUT_PATH}"
        }
      },
      {
        "name": "NiftyWriter",
        "args":
        {
            "applied_key": "pred_class0",
            "dtype": "uint8",
            "write_path": "{MMAR_EVAL_OUTPUT_PATH}"
        }
      },
      {
        "name": "NiftyWriter",
        "args":
        {
          "applied_key": "pred_class1",
          "dtype": "uint8",
          "write_path": "{MMAR_EVAL_OUTPUT_PATH}"
        }
      },
      {
        "name": "NiftyWriter",
        "args":
        {
          "applied_key": "pred_class2",
          "dtype": "uint8",
          "write_path": "{MMAR_EVAL_OUTPUT_PATH}"
        }
      }

    ],

    "label_transforms":
    [
        {
            "name": "LoadNifty",
            "args": {
              "fields": "label"
            }
        },
        {
            "name": "SplitBasedOnLabel",
            "args": {
              "applied_key": "label",
              "channel_names": [
                "label_class0",
                "label_class1",
                "label_class2"
              ]
            }
        }
    ],

    "val_metrics":
    [
        {
            "name": "MetricAverageFromArrayDice",
            "args": {
              "name": "mean_dice1",
              "applied_key": "pred_class1",
              "label_key": "label_class1",
              "report_path": "{MMAR_EVAL_OUTPUT_PATH}"
            }
        },
      {
            "name": "MetricAverageFromArrayDice",
            "args": {
              "name": "mean_dice2",
              "applied_key": "pred_class2",
              "label_key": "label_class2",
              "report_path": "{MMAR_EVAL_OUTPUT_PATH}"
            }
        }

    ],

    "inferer":
    {
        "name": "ScanWindowInferer",
        "args": {
          "is_channels_first": true,
          "roi_size": [96, 96, 32]
        }
    },

    "model_loader":
    {
        "name": "CheckpointLoader",
        "args": {
          "input_node_names": {
            "image": "NV_MODEL_INPUT"
          },
          "output_node_names": {
            "model": "NV_MODEL_OUTPUT"
          },
          "checkpoint_dir": "{MMAR_CKPT_DIR}"
        }
    }
}
